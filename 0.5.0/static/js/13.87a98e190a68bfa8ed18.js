webpackJsonp([13],{2:function(n,t,o){"use strict";function e(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(t,"__esModule",{value:!0}),t.rdMark=void 0;var i=o(3),c=e(i);t.rdMark=c.default},3:function(n,t,o){"use strict";function e(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(t,"__esModule",{value:!0});var i=o(4),c=e(i);t.default={functional:!0,render:function(n,t){var o="",e=!0,i=!1,r=void 0;try{for(var a,s=(0,c.default)(t.children);!(e=(a=s.next()).done);e=!0){var u=a.value;o+=u.text}}catch(n){i=!0,r=n}finally{try{!e&&s.return&&s.return()}finally{if(i)throw r}}return n("div",{class:["marked"],domProps:{innerHTML:window.marked(o)}})}}},258:function(n,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=o(2),i=o(5);t.default={data:function(){return{code:{one:'<!-- Vue root compoment template -->\n<div id="app">\n    <router-view></router-view>\n    <rd-modal></rd-modal>\n</div>'}}},components:{rdButton:i.rdButton,rdMark:e.rdMark},methods:{open:function(){var n=this;this.$Modal.confirm("这里是标题","这里应该说点什么",function(){console.log(n.cov()),n.$Notification.success("你点击了确认","你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认",5e3)},function(){n.$Notification.success("你点击了取消","",5e3)})},openWithOption:function(){var n=this;this.$Modal.confirm("这里是标题","这里应该说点什么",function(){n.$Notification.success("你点击了确认","你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认",5e3)},function(){n.$Notification.success("你点击了取消","",5e3)},{cancelButton:{show:!0,type:"",text:"为啥要取消"},confirmButton:{show:!0,type:"success",text:"确定"}})},openHTML:function(){var n=this;this.$Modal.confirmWithHTML("这里是标题","\n                    <h1>这里是个H1</h1>\n                    <p>这里是一个段落</p>\n                    <h2>这里是个H1</h2>\n                ",function(){n.$Notification.success("你点击了确认","你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认",5e3)},function(){n.$Notification.success("你点击了取消","",5e3)})},openHTMLWithLarge:function(){var n=this;this.$Modal.confirmWithHTML("这里是标题","\n                    <h1>这里是个H1</h1>\n                    <p>这里是一个段落</p>\n                    <h2>这里是个H1</h2>\n                ",function(){n.$Notification.success("你点击了确认","你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认",5e3)},function(){n.$Notification.success("你点击了取消","",5e3)},{large:!0})}}}},605:function(n,t,o){var e,i;e=o(258);var c=o(628);i=e=e||{},"object"!=typeof e.default&&"function"!=typeof e.default||(i=e=e.default),"function"==typeof i&&(i=i.options),i.render=c.render,i.staticRenderFns=c.staticRenderFns,n.exports=e},628:function(n,t){n.exports={render:function(){var n=this,t=n.$createElement;return t("div",{staticClass:"ex-content"},[t("div",{staticClass:"ex-card"},[t("rd-mark",["\n# Modal 弹窗\n模态对话框。\n## 何时使用\n\n需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。\n另外当需要一个简洁的确认框询问用户时\n```\nthis.$Modal.confirm(title:String, content:String, onConfirm:Function, onCancle:Function, options: Object)\n```\n## 示例\n    "])," ",t("p",[t("rd-button",{on:{click:n.open}},["开启对话框"])," ",t("rd-button",{on:{click:n.openWithOption}},["开启对话框 (自定义按钮类型)"])])," ",t("p",[t("rd-button",{on:{click:n.openHTML}},["开启对话框"])," ",t("rd-button",{on:{click:n.openHTMLWithLarge}},["开启对话框 (options.large = true)"])])," ",t("rd-mark",["\n## 代码\n\n\n首先在项目的入口文件中引入 RadonUI, 调用 `Vue.use` 安装。\n\n```javascript\n// main.js\nimport { RadonInstall } from 'radon-ui'\n\nVue.use(RadonInstall, {\n    Modal: true\n})\n```\n\n在根组件添加 `rd-modal` 组件的位置\n\n```\n"+n._s(n.code.one)+"\n```\n\n上面的准备工作完成之后，就可以在任何组件中调用 `vm.$Modal.confirm` 来创建一个对话框了\n\n```javascript\n// any vue components\nexport default {\n    methods: {\n        open () {\n            this.$Modal.confirm(\n                '这里是标题',\n                '这里应该说点什么',\n                () => {\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\n                },\n                () => {\n                    this.$Notification.success('你点击了取消', '', 5000)\n                }\n            )\n        }\n    }\n}\n\n```\n\n## API\n\n`this.$Modal.confirm(title, content, confirm, cancel， options)`\n\n`this.$Modal.confirmWithHTML(title, rawHTML, confirm, cancel， options)`\n\n\n| 参数            | 类型         | 说明           |\n| :------------- |:-------------|:--------------|\n| title          | String       | 窗口标题       |\n| content        | String       | 正文描述文字|\n| rawHTML        | String       | 在 confirmWithHTML 中使用，HTML字符|\n| confirm        | Function     | 确认回调函数     |\n| cancel         | Function     | 取消或者关闭回调函数 |\n| options        | Object       | 详细配置项，可选  |\n\n\n> Options\n\n```\nlarge: true, // Boolean\ncancelButton: cancelButton || {\n    show: true,  // Boolean\n    type: '',    // String 请参考 Button \n    text: '取消' // String\n},\nconfirmButton: confirmButton || {\n    show: true,\n    type: 'primary',\n    text: '确定'\n}\n```\n    "])])])},staticRenderFns:[]}}});