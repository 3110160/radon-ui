{"version":3,"sources":["webpack:///static/js/12.f9e4d8e8914c1879b273.js","webpack:///./src/views/index.js?7d32************","webpack:///./src/views/rdMark.js?8dc2************","webpack:///modal.vue","webpack:///./src/views/global/modal.vue","webpack:///./src/views/global/modal.vue?f03a"],"names":["webpackJsonp","2","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","rdMark","undefined","_rdMark","_rdMark2","3","_getIterator2","_getIterator3","functional","render","h","context","textContent","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","next","done","slot","text","err","return","class","domProps","innerHTML","window","marked","256","_index","_radonUi","data","code","one","components","rdButton","methods","open","_this","this","$Modal","confirm","console","log","cov","$Notification","success","openWithOption","_this2","cancelButton","show","type","confirmButton","openHTML","_this3","confirmWithHTML","openHTMLWithLarge","_this4","large","619","__vue_exports__","__vue_options__","__vue_template__","options","staticRenderFns","642","_vm","_h","$createElement","staticClass","on","click","_s"],"mappings":"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","file":"static/js/12.f9e4d8e8914c1879b273.js","sourcesContent":["webpackJsonp([12,33],{\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.rdMark = undefined;\n\t\n\tvar _rdMark = __webpack_require__(3);\n\t\n\tvar _rdMark2 = _interopRequireDefault(_rdMark);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.rdMark = _rdMark2.default;\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _getIterator2 = __webpack_require__(4);\n\t\n\tvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    functional: true,\n\t    render: function render(h, context) {\n\t        var textContent = '';\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = (0, _getIterator3.default)(context.children), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var slot = _step.value;\n\t\n\t                textContent += slot.text;\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t\n\t        return h('div', {\n\t            class: ['marked'],\n\t            domProps: {\n\t                innerHTML: window.marked(textContent)\n\t            }\n\t        });\n\t    }\n\t};\n\n/***/ },\n\n/***/ 256:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _radonUi = __webpack_require__(5);\n\t\n\texports.default = {\n\t    data: function data() {\n\t        return {\n\t            code: {\n\t                one: '<!-- Vue root compoment template -->\\n<div id=\"app\">\\n    <router-view></router-view>\\n    <rd-modal></rd-modal>\\n</div>'\n\t            }\n\t        };\n\t    },\n\t\n\t    components: {\n\t        rdButton: _radonUi.rdButton,\n\t        rdMark: _index.rdMark\n\t    },\n\t    methods: {\n\t        open: function open() {\n\t            var _this = this;\n\t\n\t            this.$Modal.confirm('这里是标题', '这里应该说点什么', function () {\n\t                console.log(_this.cov());\n\t                _this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000);\n\t            }, function () {\n\t                _this.$Notification.success('你点击了取消', '', 5000);\n\t            });\n\t        },\n\t        openWithOption: function openWithOption() {\n\t            var _this2 = this;\n\t\n\t            this.$Modal.confirm('这里是标题', '这里应该说点什么', function () {\n\t                _this2.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000);\n\t            }, function () {\n\t                _this2.$Notification.success('你点击了取消', '', 5000);\n\t            }, {\n\t                cancelButton: {\n\t                    show: true,\n\t                    type: '',\n\t                    text: '为啥要取消'\n\t                },\n\t                confirmButton: {\n\t                    show: true,\n\t                    type: 'success',\n\t                    text: '确定'\n\t                }\n\t            });\n\t        },\n\t        openHTML: function openHTML() {\n\t            var _this3 = this;\n\t\n\t            this.$Modal.confirmWithHTML('这里是标题', '\\n                    <h1>\\u8FD9\\u91CC\\u662F\\u4E2AH1</h1>\\n                    <p>\\u8FD9\\u91CC\\u662F\\u4E00\\u4E2A\\u6BB5\\u843D</p>\\n                    <h2>\\u8FD9\\u91CC\\u662F\\u4E2AH1</h2>\\n                ', function () {\n\t                _this3.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000);\n\t            }, function () {\n\t                _this3.$Notification.success('你点击了取消', '', 5000);\n\t            });\n\t        },\n\t        openHTMLWithLarge: function openHTMLWithLarge() {\n\t            var _this4 = this;\n\t\n\t            this.$Modal.confirmWithHTML('这里是标题', '\\n                    <h1>\\u8FD9\\u91CC\\u662F\\u4E2AH1</h1>\\n                    <p>\\u8FD9\\u91CC\\u662F\\u4E00\\u4E2A\\u6BB5\\u843D</p>\\n                    <h2>\\u8FD9\\u91CC\\u662F\\u4E2AH1</h2>\\n                ', function () {\n\t                _this4.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000);\n\t            }, function () {\n\t                _this4.$Notification.success('你点击了取消', '', 5000);\n\t            }, {\n\t                large: true\n\t            });\n\t        }\n\t    }\n\t};\n\n/***/ },\n\n/***/ 619:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_exports__, __vue_options__\n\tvar __vue_styles__ = {}\n\t\n\t/* script */\n\t__vue_exports__ = __webpack_require__(256)\n\t\n\t/* template */\n\tvar __vue_template__ = __webpack_require__(642)\n\t__vue_options__ = __vue_exports__ = __vue_exports__ || {}\n\tif (\n\t  typeof __vue_exports__.default === \"object\" ||\n\t  typeof __vue_exports__.default === \"function\"\n\t) {\n\t__vue_options__ = __vue_exports__ = __vue_exports__.default\n\t}\n\tif (typeof __vue_options__ === \"function\") {\n\t  __vue_options__ = __vue_options__.options\n\t}\n\t\n\t__vue_options__.render = __vue_template__.render\n\t__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\t\n\tmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 642:\n/***/ function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;\n\t  return _h('div', {\n\t    staticClass: \"ex-content\"\n\t  }, [_h('div', {\n\t    staticClass: \"ex-card\"\n\t  }, [_h('rd-mark', [\"\\n# Modal 弹窗\\n模态对话框。\\n## 何时使用\\n\\n需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。\\n另外当需要一个简洁的确认框询问用户时\\n```\\nthis.$Modal.confirm(title:String, content:String, onConfirm:Function, onCancle:Function, options: Object)\\n```\\n## 示例\\n    \"]), \" \", _h('p', [_h('rd-button', {\n\t    on: {\n\t      \"click\": _vm.open\n\t    }\n\t  }, [\"开启对话框\"]), \" \", _h('rd-button', {\n\t    on: {\n\t      \"click\": _vm.openWithOption\n\t    }\n\t  }, [\"开启对话框 (自定义按钮类型)\"])]), \" \", _h('p', [_h('rd-button', {\n\t    on: {\n\t      \"click\": _vm.openHTML\n\t    }\n\t  }, [\"开启对话框\"]), \" \", _h('rd-button', {\n\t    on: {\n\t      \"click\": _vm.openHTMLWithLarge\n\t    }\n\t  }, [\"开启对话框 (options.large = true)\"])]), \" \", _h('rd-mark', [\"\\n## 代码\\n\\n\\n首先在项目的入口文件中引入 RadonUI, 调用 `Vue.use` 安装。\\n\\n```javascript\\n// main.js\\nimport { RadonInstall } from 'radon-ui'\\n\\nVue.use(RadonInstall, {\\n    Modal: true\\n})\\n```\\n\\n在根组件添加 `rd-modal` 组件的位置\\n\\n```\\n\" + _vm._s(_vm.code.one) + \"\\n```\\n\\n上面的准备工作完成之后，就可以在任何组件中调用 `vm.$Modal.confirm` 来创建一个对话框了\\n\\n```javascript\\n// any vue components\\nexport default {\\n    methods: {\\n        open () {\\n            this.$Modal.confirm(\\n                '这里是标题',\\n                '这里应该说点什么',\\n                () => {\\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\\n                },\\n                () => {\\n                    this.$Notification.success('你点击了取消', '', 5000)\\n                }\\n            )\\n        }\\n    }\\n}\\n\\n```\\n\\n## API\\n\\n`this.$Modal.confirm(title, content, confirm, cancel， options)`\\n\\n`this.$Modal.confirmWithHTML(title, rawHTML, confirm, cancel， options)`\\n\\n\\n| 参数            | 类型         | 说明           |\\n| :------------- |:-------------|:--------------|\\n| title          | String       | 窗口标题       |\\n| content        | String       | 正文描述文字|\\n| rawHTML        | String       | 在 confirmWithHTML 中使用，HTML字符|\\n| confirm        | Function     | 确认回调函数     |\\n| cancel         | Function     | 取消或者关闭回调函数 |\\n| options        | Object       | 详细配置项，可选  |\\n\\n\\n> Options\\n\\n```\\nlarge: true, // Boolean\\ncancelButton: cancelButton || {\\n    show: true,  // Boolean\\n    type: '',    // String 请参考 Button \\n    text: '取消' // String\\n},\\nconfirmButton: confirmButton || {\\n    show: true,\\n    type: 'primary',\\n    text: '确定'\\n}\\n```\\n    \"])])])\n\t},staticRenderFns: []}\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/12.f9e4d8e8914c1879b273.js","import rdMark from './rdMark'\n\nexport {\n    rdMark\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/index.js","export default {\n    functional: true,\n    render (h, context) {\n        let textContent = ''\n        for (let slot of context.children) {\n            textContent += slot.text\n        }\n        return h('div', {\n            class: ['marked'],\n            domProps: {\n                innerHTML: window.marked(textContent),\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/views/rdMark.js","<template>\n<div class=\"ex-content\">\n    <div class=\"ex-card\">\n    <rd-mark>\n# Modal 弹窗\n模态对话框。\n## 何时使用\n\n需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。\n另外当需要一个简洁的确认框询问用户时\n```\nthis.$Modal.confirm(title:String, content:String, onConfirm:Function, onCancle:Function, options: Object)\n```\n## 示例\n    </rd-mark>\n    <p>\n        <rd-button @click=\"open\">开启对话框</rd-button>\n        <rd-button @click=\"openWithOption\">开启对话框 (自定义按钮类型)</rd-button>\n    </p>\n    <p>\n        <rd-button @click=\"openHTML\">开启对话框</rd-button>\n        <rd-button @click=\"openHTMLWithLarge\">开启对话框 (options.large = true)</rd-button>\n    </p>\n    <rd-mark>\n## 代码\n\n\n首先在项目的入口文件中引入 RadonUI, 调用 `Vue.use` 安装。\n\n```javascript\n// main.js\nimport { RadonInstall } from 'radon-ui'\n\nVue.use(RadonInstall, {\n    Modal: true\n})\n```\n\n在根组件添加 `rd-modal` 组件的位置\n\n```\n{{code.one}}\n```\n\n上面的准备工作完成之后，就可以在任何组件中调用 `vm.$Modal.confirm` 来创建一个对话框了\n\n```javascript\n// any vue components\nexport default {\n    methods: {\n        open () {\n            this.$Modal.confirm(\n                '这里是标题',\n                '这里应该说点什么',\n                () => {\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\n                },\n                () => {\n                    this.$Notification.success('你点击了取消', '', 5000)\n                }\n            )\n        }\n    }\n}\n\n```\n\n## API\n\n`this.$Modal.confirm(title, content, confirm, cancel， options)`\n\n`this.$Modal.confirmWithHTML(title, rawHTML, confirm, cancel， options)`\n\n\n| 参数            | 类型         | 说明           |\n| :------------- |:-------------|:--------------|\n| title          | String       | 窗口标题       |\n| content        | String       | 正文描述文字|\n| rawHTML        | String       | 在 confirmWithHTML 中使用，HTML字符|\n| confirm        | Function     | 确认回调函数     |\n| cancel         | Function     | 取消或者关闭回调函数 |\n| options        | Object       | 详细配置项，可选  |\n\n\n> Options\n\n```\nlarge: true, // Boolean\ncancelButton: cancelButton || {\n    show: true,  // Boolean\n    type: '',    // String 请参考 Button \n    text: '取消' // String\n},\nconfirmButton: confirmButton || {\n    show: true,\n    type: 'primary',\n    text: '确定'\n}\n```\n    </rd-mark>\n    </div>\n</div>\n</template>\n<script>\nimport { rdMark } from '../index'\nimport {\n    rdButton\n} from 'radon-ui'\n\nexport default {\n    data () {\n        return {\n            code: {\n                one: `<!-- Vue root compoment template -->\n<div id=\"app\">\n    <router-view></router-view>\n    <rd-modal></rd-modal>\n</div>`\n            }\n        }\n    },\n    components: {\n        rdButton,\n        rdMark\n    },\n    methods: {\n        open () {\n            this.$Modal.confirm(\n                '这里是标题',\n                '这里应该说点什么',\n                () => {\n                    console.log(this.cov())\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\n                },\n                () => {\n                    this.$Notification.success('你点击了取消', '', 5000)\n                }\n            )\n        },\n        openWithOption () {\n            this.$Modal.confirm(\n                '这里是标题',\n                '这里应该说点什么',\n                () => {\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\n                },\n                () => {\n                    this.$Notification.success('你点击了取消', '', 5000)\n                }, {\n                    cancelButton: {\n                        show: true,\n                        type: '',\n                        text: '为啥要取消'\n                    },\n                    confirmButton: {\n                        show: true,\n                        type: 'success',\n                        text: '确定'\n                    }\n                }\n            )\n        },\n        openHTML () {\n            this.$Modal.confirmWithHTML(\n                '这里是标题',\n                `\n                    <h1>这里是个H1</h1>\n                    <p>这里是一个段落</p>\n                    <h2>这里是个H1</h2>\n                `,\n                () => {\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\n                },\n                () => {\n                    this.$Notification.success('你点击了取消', '', 5000)\n                }\n            )\n        },\n        openHTMLWithLarge () {\n            this.$Modal.confirmWithHTML(\n                '这里是标题',\n                `\n                    <h1>这里是个H1</h1>\n                    <p>这里是一个段落</p>\n                    <h2>这里是个H1</h2>\n                `,\n                () => {\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\n                },\n                () => {\n                    this.$Notification.success('你点击了取消', '', 5000)\n                }, {\n                    large: true\n                }\n            )\n        }\n    }\n}\n</script>\n\n\n// WEBPACK FOOTER //\n// modal.vue?c702e70a","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./modal.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-2969e83a!vue-loader/lib/selector?type=template&index=0!./modal.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/global/modal.vue\n// module id = 619\n// module chunks = 12","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;\n  return _h('div', {\n    staticClass: \"ex-content\"\n  }, [_h('div', {\n    staticClass: \"ex-card\"\n  }, [_h('rd-mark', [\"\\n# Modal 弹窗\\n模态对话框。\\n## 何时使用\\n\\n需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。\\n另外当需要一个简洁的确认框询问用户时\\n```\\nthis.$Modal.confirm(title:String, content:String, onConfirm:Function, onCancle:Function, options: Object)\\n```\\n## 示例\\n    \"]), \" \", _h('p', [_h('rd-button', {\n    on: {\n      \"click\": _vm.open\n    }\n  }, [\"开启对话框\"]), \" \", _h('rd-button', {\n    on: {\n      \"click\": _vm.openWithOption\n    }\n  }, [\"开启对话框 (自定义按钮类型)\"])]), \" \", _h('p', [_h('rd-button', {\n    on: {\n      \"click\": _vm.openHTML\n    }\n  }, [\"开启对话框\"]), \" \", _h('rd-button', {\n    on: {\n      \"click\": _vm.openHTMLWithLarge\n    }\n  }, [\"开启对话框 (options.large = true)\"])]), \" \", _h('rd-mark', [\"\\n## 代码\\n\\n\\n首先在项目的入口文件中引入 RadonUI, 调用 `Vue.use` 安装。\\n\\n```javascript\\n// main.js\\nimport { RadonInstall } from 'radon-ui'\\n\\nVue.use(RadonInstall, {\\n    Modal: true\\n})\\n```\\n\\n在根组件添加 `rd-modal` 组件的位置\\n\\n```\\n\" + _vm._s(_vm.code.one) + \"\\n```\\n\\n上面的准备工作完成之后，就可以在任何组件中调用 `vm.$Modal.confirm` 来创建一个对话框了\\n\\n```javascript\\n// any vue components\\nexport default {\\n    methods: {\\n        open () {\\n            this.$Modal.confirm(\\n                '这里是标题',\\n                '这里应该说点什么',\\n                () => {\\n                    this.$Notification.success('你点击了确认', '你点击了确认你点击了确认你点击了确认你点击了确认你点击了确认', 5000)\\n                },\\n                () => {\\n                    this.$Notification.success('你点击了取消', '', 5000)\\n                }\\n            )\\n        }\\n    }\\n}\\n\\n```\\n\\n## API\\n\\n`this.$Modal.confirm(title, content, confirm, cancel， options)`\\n\\n`this.$Modal.confirmWithHTML(title, rawHTML, confirm, cancel， options)`\\n\\n\\n| 参数            | 类型         | 说明           |\\n| :------------- |:-------------|:--------------|\\n| title          | String       | 窗口标题       |\\n| content        | String       | 正文描述文字|\\n| rawHTML        | String       | 在 confirmWithHTML 中使用，HTML字符|\\n| confirm        | Function     | 确认回调函数     |\\n| cancel         | Function     | 取消或者关闭回调函数 |\\n| options        | Object       | 详细配置项，可选  |\\n\\n\\n> Options\\n\\n```\\nlarge: true, // Boolean\\ncancelButton: cancelButton || {\\n    show: true,  // Boolean\\n    type: '',    // String 请参考 Button \\n    text: '取消' // String\\n},\\nconfirmButton: confirmButton || {\\n    show: true,\\n    type: 'primary',\\n    text: '确定'\\n}\\n```\\n    \"])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-2969e83a!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/global/modal.vue\n// module id = 642\n// module chunks = 12"],"sourceRoot":""}